$date
	Thu Feb 15 00:15:10 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module carry_lookahead_adder_tb $end
$var wire 3 ! w_RESULT [2:0] $end
$var wire 1 " carry_out $end
$var reg 3 # r_ADD_1 [2:0] $end
$var reg 3 $ r_ADD_2 [2:0] $end
$scope module carry_lookahead_inst $end
$var wire 1 % cin $end
$var wire 3 & i_add1 [2:0] $end
$var wire 3 ' i_add2 [2:0] $end
$var wire 3 ( o_result [2:0] $end
$var wire 3 ) w_SUM [2:0] $end
$var wire 3 * w_P [2:0] $end
$var wire 3 + w_G [2:0] $end
$var wire 4 , w_C [3:0] $end
$var wire 1 " cout $end
$scope begin genblk1[0] $end
$scope module full_adder_inst $end
$var wire 1 - aftand1 $end
$var wire 1 . aftand2 $end
$var wire 1 / bit1 $end
$var wire 1 0 bit1_xor_bit2 $end
$var wire 1 1 bit2 $end
$var wire 1 2 cin $end
$var wire 1 3 cout $end
$var wire 1 4 sum $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$scope module full_adder_inst $end
$var wire 1 5 aftand1 $end
$var wire 1 6 aftand2 $end
$var wire 1 7 bit1 $end
$var wire 1 8 bit1_xor_bit2 $end
$var wire 1 9 bit2 $end
$var wire 1 : cin $end
$var wire 1 ; cout $end
$var wire 1 < sum $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$scope module full_adder_inst $end
$var wire 1 = aftand1 $end
$var wire 1 > aftand2 $end
$var wire 1 ? bit1 $end
$var wire 1 @ bit1_xor_bit2 $end
$var wire 1 A bit2 $end
$var wire 1 B cin $end
$var wire 1 C cout $end
$var wire 1 D sum $end
$upscope $end
$upscope $end
$scope begin genblk2[0] $end
$upscope $end
$scope begin genblk2[1] $end
$upscope $end
$scope begin genblk2[2] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
14
03
12
01
00
0/
0.
0-
b1 ,
b0 +
b0 *
b1 )
b1 (
b0 '
b0 &
1%
b0 $
b0 #
0"
b1 !
$end
#20000
1"
b1001 ,
1C
1>
b100 +
b100 *
1A
1?
b100 $
b100 '
b100 #
b100 &
#30000
1D
1B
1;
15
1:
b1111 ,
13
0<
b100 !
b100 (
b100 )
04
1-
18
10
b111 *
19
1/
b110 $
b110 '
b101 #
b101 &
#40000
14
0-
b111 !
b111 (
b111 )
1<
05
00
1.
08
16
b111 +
11
17
b111 $
b111 '
b111 #
b111 &
#50000
0"
b111 ,
04
1-
13
b100 !
b100 (
b100 )
0<
15
1;
0C
10
0.
18
06
0>
b0 +
b11 *
01
0A
07
0?
b10 $
b10 '
b1 #
b1 &
#100000000
